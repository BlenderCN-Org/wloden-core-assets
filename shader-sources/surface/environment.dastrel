uniform(set=0, binding=0) ObjectState
{
    modelMatrix: float4x4;
    inverseModelMatrix: float4x4;
    normalMatrix: float3x3;
    inverseNormalMatrix: float3x3;
}

uniform(set=1, binding=0) CameraObjectState
{
    inverseViewMatrix: float4x4;
    viewMatrix: float4x4;
    inverseViewNormalMatrix: float3x3;
    viewNormalMatrix: float3x3;
}

uniform(set=1, binding=1) CameraState
{
    projectionMatrix: float4x4;
    inverseProjectionMatrix: float4x4;
}

uniform(set=2, binding=0) GlobalLightingState
{
    // Hemisphere lighting
    groundLighting: float4;
    skyLighting: float4;
    sunDirection: float3;

    // Normal lights
    numberOfLights: int;
    lightSources: LightSource[16];
}

struct LightSource
{
    position: float4;
    intensity: float4;
}
